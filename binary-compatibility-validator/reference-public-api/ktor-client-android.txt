public final class io/ktor/client/engine/android/Android : io/ktor/client/engine/HttpClientEngineFactory {
	public static final field INSTANCE Lio/ktor/client/engine/android/Android;
	public fun create (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/engine/HttpClientEngine;
}

public final class io/ktor/client/engine/android/AndroidClientEngine : io/ktor/client/engine/HttpClientJvmEngine {
	public fun <init> (Lio/ktor/client/engine/android/AndroidEngineConfig;)V
	public fun execute (Lio/ktor/client/call/HttpClientCall;Lio/ktor/client/request/HttpRequestData;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun getConfig ()Lio/ktor/client/engine/HttpClientEngineConfig;
	public fun getConfig ()Lio/ktor/client/engine/android/AndroidEngineConfig;
}

public final class io/ktor/client/engine/android/AndroidEngineConfig : io/ktor/client/engine/HttpClientEngineConfig {
	public fun <init> ()V
	public final fun getConnectTimeout ()I
	public final fun getProxy ()Ljava/net/Proxy;
	public final fun getSocketTimeout ()I
	public final fun getSslManager ()Lkotlin/jvm/functions/Function1;
	public final fun setConnectTimeout (I)V
	public final fun setProxy (Ljava/net/Proxy;)V
	public final fun setSocketTimeout (I)V
	public final fun setSslManager (Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/client/engine/android/AndroidEngineContainer : io/ktor/client/HttpClientEngineContainer {
	public fun <init> ()V
	public fun getFactory ()Lio/ktor/client/engine/HttpClientEngineFactory;
}

public final class io/ktor/client/engine/android/AndroidHttpResponse : io/ktor/client/response/HttpResponse {
	public fun <init> (Lio/ktor/client/call/HttpClientCall;Lkotlinx/coroutines/io/ByteReadChannel;Lio/ktor/http/Headers;Lio/ktor/util/date/GMTDate;Lio/ktor/util/date/GMTDate;Lio/ktor/http/HttpStatusCode;Lio/ktor/http/HttpProtocolVersion;Lkotlin/coroutines/CoroutineContext;Ljava/net/HttpURLConnection;)V
	public fun close ()V
	public fun getCall ()Lio/ktor/client/call/HttpClientCall;
	public fun getContent ()Lkotlinx/coroutines/io/ByteReadChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getExecutionContext ()Lkotlinx/coroutines/Job;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getRequestTime ()Lio/ktor/util/date/GMTDate;
	public fun getResponseTime ()Lio/ktor/util/date/GMTDate;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun getVersion ()Lio/ktor/http/HttpProtocolVersion;
}

public final class io/ktor/client/engine/android/RequestInvalidException : java/lang/IllegalStateException {
	public fun <init> (Ljava/lang/String;)V
	public fun getMessage ()Ljava/lang/String;
}

